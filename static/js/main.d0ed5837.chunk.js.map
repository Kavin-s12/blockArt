{"version":3,"sources":["components/navbar/Navbarmain.js","theme.js","global.js","components/navbar/Burger.jsx","components/navbar/Rightnav.jsx","components/navbar/Navbar.js","App.js","index.js"],"names":["Navbarmain","className","style","color","this","props","darkmode","checked","onChange","toggleTheme","type","id","htmlFor","Component","lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","StyledBurger","styled","div","open","Burger","onClick","setOpen","Ul","ul","Rightnav","Navbar","state","clicked","handleClick","setState","bind","placeholder","required","App","React","useState","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userPreferDark","window","matchMedia","getPrefColorScheme","getInitialMode","setDarkmode","useEffect","setItem","stringify","prevMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ed5837.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Navbarmain.css';\r\n\r\nclass Navbarmain extends Component {\r\n    render() {\r\n        return (\r\n            // Main navbar and light-dark modes\r\n            <nav className=\"nav-main\">\r\n                    <h1 className=\"heading\"><b>Block</b>Art</h1>\r\n\r\n                    <div className=\"toggle-container\">\r\n                        <span style={{color: this.props.darkmode? \"grey\" :\"yellow\"}}>☀</span>\r\n                        <span className=\"toggle\">\r\n                            <input\r\n                            checked={this.props.darkmode}\r\n                            onChange={this.props.toggleTheme}\r\n                            type=\"checkbox\"\r\n                            className=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            />\r\n                            <label htmlFor=\"checkbox\"/>\r\n                        </span>\r\n                        <span style={{color : this.props.darkmode? \"#fff\":\"grey\"}}>☽</span>\r\n                    </div>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Navbarmain;","// theme.js\r\nexport const lightTheme = {\r\n    body: '#E2E2E2',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n  }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n   body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledBurger = styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    position: fixed;\r\n    top:75px;\r\n    right : 20px;\r\n    display: none;\r\n    \r\n\r\n    @media (max-width: 768px){\r\n        display: inline;\r\n        flex-flow: column nowrap;\r\n        justify-content: space-around;\r\n        z-index:20;\r\n    }\r\n\r\n    div{\r\n        width: 2rem;\r\n        height: 0.25rem;\r\n        background-color: ${({open}) => open ? '#ccc' : '#333'};\r\n        border-radius: 10px;\r\n        transform-origin: 1px;\r\n        margin-top: 6px;\r\n        transition : all 0.3s linear;\r\n        z-index:20;\r\n        \r\n        &:nth-child(1){\r\n            transform: ${({open}) => open ? 'rotate(45deg) translateY(45%)' : 'rotate(0)'};\r\n            \r\n        }\r\n\r\n        &:nth-child(2){\r\n            transform: ${({open}) => open ? 'translateX(100%)' : 'translateX(0)'};\r\n            opacity: ${({open}) => open ? 0 : 1};\r\n        }\r\n\r\n        &:nth-child(3){\r\n            transform: ${({open}) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\n\r\n\r\nconst Burger = (props) => {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <StyledBurger open={props.open} onClick={props.setOpen}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n                \r\n            </StyledBurger>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Burger; \r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n    display: flex;\r\n    list-style: none;\r\n    flex-flow: row nowrap;\r\n    font-size: 1.3em;\r\n    color: white;\r\n\r\n    li{\r\n        padding: 10px 10px;\r\n        cursor:pointer;\r\n    }\r\n\r\n    @media (max-width: 768px){\r\n        flex-flow: column nowrap;\r\n        transform: ${({open}) => open ? 'translateX(0)' : 'translateX(100%)'};\r\n        top: 60px;\r\n        right: 0;\r\n        background-color: rgb(85, 125, 199);\r\n        position: fixed;\r\n        height: 100vh;\r\n        width: 300px;\r\n        z-index: 1;\r\n        padding-top:  3.5rem;\r\n        transition: transform 0.35s ease-out;\r\n    }\r\n\r\n`;\r\n\r\n\r\nconst Rightnav = (props) => {\r\n    return (\r\n                <Ul open={props.open}>\r\n                    <li>Home</li>\r\n                    <li>Market</li>\r\n                    <li>Cryptocurrency</li>\r\n                    <li>Top picks</li>\r\n                    <li>Expert tweets</li>\r\n                </Ul>\r\n    )\r\n}\r\n\r\nexport default Rightnav;","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport Burger from './Burger';\r\nimport Rightnav from './Rightnav';\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        clicked : false,\r\n        open: false\r\n     }\r\n     \r\n      handleClick = ()=>{\r\n         this.setState({clicked: !this.state.clicked})\r\n     }\r\n\r\n\r\n     setOpen = () =>{\r\n        this.setState({open: !this.state.open})\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={this.props.darkmode ? \"navbar darkmode\": \"navbar lightmode\"}>\r\n                \r\n                <span className=\"navbar-logo\"><i className=\"fab fa-react\" /></span>\r\n                \r\n               <Burger open={this.state.open} setOpen={this.setOpen.bind()}/>\r\n               <Rightnav open={this.state.open}/>\r\n                \r\n                <button className=\"btn\">Login</button>\r\n                \r\n                \r\n                \r\n                <button className=\"button-search\" onClick={this.handleClick}><i className=\"fa fa-search\"/></button>\r\n                <form className={this.state.clicked ? \"search-box active\": \"search-box\"}>\r\n                    <input \r\n                    type=\"text\"\r\n                    placeholder=\" search...\"\r\n                    className=\"search-input\"\r\n                    required/>\r\n                </form>\r\n             \r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './App.css';\r\nimport Navbarmain from './components/navbar/Navbarmain';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\nimport Navbar from './components/navbar/Navbar';\r\n\r\nfunction App() {\r\n\r\n  //toggle mode\r\n  const [darkmode, setDarkmode] = React.useState(getInitialMode());\r\n\r\n  const toggleTheme = () => {\r\n        setDarkmode(prevMode => !prevMode)\r\n  }\r\n\r\n  // store mode in local storage and user prefered mode.\r\n  React.useEffect(()=>{\r\n    localStorage.setItem(\"dark\",JSON.stringify(darkmode));\r\n  },[darkmode]);\r\n\r\n  function getInitialMode(){\r\n    const isReturningUser = \"dark\" in localStorage;\r\n    const savedMode = JSON.parse(localStorage.getItem('dark'));\r\n    const userPreferDark = getPrefColorScheme();\r\n\r\n    if(isReturningUser){\r\n      return savedMode;\r\n    }else if(userPreferDark){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function getPrefColorScheme(){\r\n    if(!window.matchMedia) return;\r\n\r\n    return (window.matchMedia(\"(prefers-color-scheme : dark)\"));\r\n  }\r\n\r\n//toggle mode---end\r\n\r\n  return (\r\n    <ThemeProvider theme={darkmode? darkTheme :lightTheme}>\r\n    <>\r\n     <GlobalStyles/>\r\n     <Navbarmain toggleTheme ={toggleTheme} darkmode={darkmode}/>\r\n     <Navbar darkmode={darkmode} />\r\n   </>\r\n   </ThemeProvider> \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}